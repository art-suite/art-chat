import &ArtSuite

class ChatView extends FluxComponent
  @subscriptions
    history:
      model:  :chatsByChatRoom
      key:    ({chatRoom}) ->  chatRoom

  @stateField message:  null
  @propFields chatRoom: :artSuite
  @getter
    user:            -> @props.currentUser
    messagePostable: -> present @message

  postMessage: ->
    @models.chat.create data: {}
      @user
      @message
      @chatRoom

    # slight delay - sometimes a "\n" is added AFTER this when "enter" is pressed
    @refs.messageInput.element.value = ""
    timeout 0 -> @refs.messageInput.element.value = ""

  valueChanged: (event) -> @message = event.props.value

  componentWillMount: ->
    timeout 500 -> @refs.messageInput.element.focus()
    super

  render: ->
    {gridSize} = &StyleProps
    Element
      childrenLayout: :column
      draw: &StyleProps.chatViewBackground

      Element
        size: h: gridSize * 3
        draw: &Palette.primary
        padding: h: gridSize / 2
        childrenLayout:     :row
        childrenAlignment:  :centerLeft
        childrenMargins:    gridSize / 2
        &Button text: :â–¼ action: @props.exit

        TextElement
          &StyleProps.titleText
          size: cs: 1
          text: @props.currentUser

      ScrollElement
        clip: true
        track: :bottom

        Element
          padding:        10
          size:           hch: 1
          childrenLayout: :column

          array postMessage from @history
            &ChatMessage
              postMessage
              {} @props.currentUser

      Element
        size:     hch: 1
        draw:
          outline:    &Palette.black.quandary
          &Palette.gray
        childrenLayout: :row
        childrenAlignment: :centerLeft
        padding: right: gridSize / 2

        Element
          size:     hch: 1
          padding:  h: 7
          draw:
            padding:    gridSize / 2
            rectangle:  radius: gridSize
            &Palette.white.primary
            outline:    &Palette.black.quandary

          TextInputElement
            &StyleProps.mediumText
            key:          :messageInput
            on:           enter: @postMessage, valueChanged: @valueChanged
            type:         :textarea
            size:         ww:1 hch:1 max: h: 160
            padding:      h: 10 v: gridSize
            placeholder:  "" new message
        &Button text: :send color: true action: @messagePostable && @postMessage